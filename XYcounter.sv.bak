module XYcounter(
	input logic clk,
	output logic vsync, hsync,
	output int x, y
	);
//Set up a bunch of timing spec variables.
	CONST int synch = 96;
	CONST int bph = 48;
	CONST int dih = 640;
	CONST int fph = 16;
	int line = synch + bph + dih + fph;
	int syncv = 2;
	int bpv = 33;
	int div = 480;
	int fpv = 10;
	int frame = syncv + bpv + div + fpv;
//Set up a modified clock to run at half the speed as the internal clock.
//Also set up a counter and XY variable.
	logic modclk = 0;
	int counter = 0;
	int x = 0;
	int y = 0;

//Count that shit out
	always_ff @(posedge modclk)
	begin
		hcounter <= hcounter + 1;
		if((counter % 800) < synch){
			hsync <= 0;
			x <= 0;
		} else if(counter % 800 > synch){
			hsync <=1;
		}else if ((counter % 800) > synch + bph && (counter % 800) < line - fph){
			hsync <= 1;
			x <= (counter % 800) - synch - bph;
		} else {
			hsync <= 1;
			x <= 0;
		}
		if((counter / 800) < syncv){
			vsync <= 0;
			y <= 0;
		} else if ((counter / 800) > syncv){
			vsync <= 1;
			y <= 0;
		} else if ((counter / 800) > syncv + bpv && (counter / 800) < syncv + bpv + div){
			vsync <=1;
			y <= (counter / 800) - syncv - bpv;
		} else if ((counter / 800) > syncv + bpv + div + fpv){
			counter <= 0;
		}
